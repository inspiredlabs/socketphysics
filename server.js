// server.js
/* **Unified Production Server**
 * 
 * This is a minimal implementation of a custom server entry point.
 * It manually starts both SvelteKit request handler and GameServer.
 * 
 * This custom server.js will be run by Node.js, it will:
 *  - Create a standard Node.js HTTP server.
 *  - Import a SvelteKit handler (generated during build process)
 *  and use it for all incoming page requests.
 *  - Import `GameServer` and attach it to that same HTTP server.
 * 
 */

import { handler } from './build/handler.js'; // Note: this file is generated by SvelteKit
import { PhysicsServer } from './src/lib/server/physics.js';
import { GameServer } from './src/lib/server/pong.js';
import http from 'http';
import { Server } from 'socket.io';

const server = http.createServer((req, res) => {
    // Let the SvelteKit handler handle the HTTP request
    handler(req, res);
});

// Attach the GameServer & PhysicsServer to the HTTP server

// AVAILABLE SERVERS:
//new GameServer(server); // PONG
new PhysicsServer(server); // PHYSICS SIMULATION


const port = process.env.PORT || 3000; // see: ./Dockerfile EXPOSE
server.listen(port, () => {
    console.log(`Server listening on port ${port}`);
    console.log('Socket.IO GameServer has been attached to the production server.');
});